// body font size
$browser-context: 16;

/* fallback */
@font-face {
  font-family: 'Material Icons';
  font-style: normal;
  font-weight: 400;
  src: url(../fonts/MaterialIcons-Regular.woff) format('woff'), 
    url(../fonts/MaterialIcons-Regular.eot) format('eot'),
    url(../fonts/MaterialIcons-Regular.ttf) format('ttf');
}

.material-icons {
  font-family: 'Material Icons';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  /* Support for all WebKit browsers. */
  -webkit-font-smoothing: antialiased;
  /* Support for Safari and Chrome. */
  text-rendering: optimizeLegibility;

  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;

  /* Support for IE. */
  font-feature-settings: 'liga';
  -webkit-font-feature-settings: 'liga';
  -webkit-font-smoothing: antialiased;
}


// unitless function to convert px to em
@function em($pixels, $context: $browser-context) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }
  @if (unitless($context)) {
    $context: $context * 1px;
  }
  @return $pixels / $context * 1em;
}

body {
  font-size: 16px;
  line-height: em(23);
}

p {
  font-size: em(16);
  font-weight: 300;
  line-height: em(23);
  margin: 0 0 20px;
  @include max(767px) {
    margin-bottom: 15px;
    font-size: em(15);
  }
  &:last-child {
    margin-bottom: 0;
  }
}

.full-card-outer {
  .full-card-inner {
    .full-card {
      .cc-block {
        .abs-content {
          .card-header {
            padding: 30px;
          }
          .text-bottom {
            padding: 30px;
            width: 100%;
          }
        }
      }
      .card-detail {
        padding: 30px 30px 0;
        p {
          color: rgba(68, 68, 68, 0.87);
          font-size: 16px;
          line-height: 1.5em;
        }
      }
    }
  }
}