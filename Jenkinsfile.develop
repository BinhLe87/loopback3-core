pipeline {
    agent none
    stages {
        //This step is used to checkout and build image from Jenkins master box
        stage('buildIMG') {
            agent {label 'master'}
            steps {
                slackSend (color: '#FFFF00', message: "STARTED: Job APC MASTER '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
                script {
                    try {
                        //login to docker hub
                        sh 'sudo docker login -u ccjenkins -p 38YahXW4iRaHets6'
                        sh 'sleep 5'
                        //Build the image from github source code
                        sh 'COMMIT=`git rev-parse --short HEAD`;sudo docker build --no-cache -t cc/automated-push-content:dev-apc-master-$BUILD_NUMBER-$COMMIT -f Dockerfile.develop .'
                        //Push the new build IMG to dockerhub                
                        sh 'COMMIT=`git rev-parse --short HEAD`;id=`sudo docker images cc/automated-push-content:dev-apc-master-$BUILD_NUMBER-$COMMIT -q`; sudo docker tag $id coachingcloud/automated-push-content:dev-apc-master-$BUILD_NUMBER-$COMMIT; sudo docker tag $id coachingcloud/automated-push-content:dev-apc-master-latest; sudo docker push coachingcloud/automated-push-content'
                        // Clean up the build to release space disk
                        sh 'COMMIT=`git rev-parse --short HEAD`;id=`sudo docker images cc/automated-push-content:dev-apc-master-$BUILD_NUMBER-$COMMIT -q`; sudo docker rmi -f $id'
                        slackSend (color: '#00FF00', message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL}) \n ")
                    } catch (all) {
                        slackSend (color: '#FF0000', message: "FAILED: Job APC MASTER '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
                        currentBuild.result = 'FAILURE'
                        error 'FAILURE'
                    }
                }
            }
        }
    }
}
